-- insert suspicious devices into table
CREATE OR REPLACE FUNCTION MAKE_SUSPICIOUS_DEVICES(DATE,DATE) RETURNS INTEGER AS $$
DECLARE
V_STARTPERIOD DATE;
V_ENDPERIOD DATE;
BEGIN
 V_STARTPERIOD := $1; 
 V_ENDPERIOD := $2;
   --CREATE TABLE OOKLA_SUSPICIOUS_DEVICES (NETWORK_OPERATOR_NAME, MNTH,DEVICE_OS_MONTH,TESTS,DEVICES,DOWNLOAD_KBPS) AS
   INSERT INTO OOKLA_SUSPICIOUS_DEVICES (NETWORK_OPERATOR_NAME, MNTH,DEVICE_OS_MONTH,TESTS,DEVICES,DOWNLOAD_KBPS) 
   SELECT NETWORK_OPERATOR_NAME,EXTRACT(MONTH FROM B.TEST_DATE) MNTH, B.DEVICE_ID||B.OS||EXTRACT(MONTH FROM B.TEST_DATE) AS DEVICE_OS_MONTH, COUNT(*) AS TESTS, COUNT(DISTINCT DEVICE_ID) AS DEVICES,
   AVG(DOWNLOAD_KBPS) AS DOWNLOAD_KBPS
   FROM OOKLA_ALL_DATA B
   WHERE TEST_DATE>=V_STARTPERIOD AND TEST_DATE<V_ENDPERIOD
   GROUP BY NETWORK_OPERATOR_NAME,DEVICE_ID,OS,EXTRACT(MONTH FROM TEST_DATE)
   HAVING COUNT(*)>30;
   RETURN 1;
END;
$$ LANGUAGE PLPGSQL VOLATILE STRICT;


truncate table OOKLA_SUSPICIOUS_DEVICES;
-- run function for months in quarter
select make_suspicious_devices('2015-04-1','2015-05-1');
select make_suspicious_devices('2015-05-1','2015-06-1');
select make_suspicious_devices('2015-06-1','2015-07-1');

select count(*) from OOKLA_SUSPICIOUS_DEVICES;

-- insert suspicious devices into table
CREATE OR REPLACE FUNCTION MAKE_CLEAN_DATA(DATE,DATE) RETURNS INTEGER AS $$
DECLARE
V_STARTPERIOD DATE;
V_ENDPERIOD DATE;
BEGIN
 V_STARTPERIOD := $1; 
 V_ENDPERIOD := $2;
INSERT INTO OOKLA_ALL_DATA_CLEAN (
        OS,TEST_ID,DEVICE_ID,TEST_DATE,CLIENT_IP_ADDRESS,DOWNLOAD_KBPS,UPLOAD_KBPS,LATENCY,SERVER_NAME,SERVER_COUNTRY,SERVER_COUNTRY_CODE
        ,SERVER_LATITUDE,SERVER_LONGITUDE,SERVER_SPONSOR_NAME,CLIENT_COUNTRY,CLIENT_COUNTRY_CODE,CLIENT_REGION_NAME,CLIENT_REGION_CODE
        ,CLIENT_CITY,CLIENT_LATITUDE,CLIENT_LONGITUDE,MILES_BETWEEN,CONNECTION_TYPE,CONNECTION_TYPE_NAME,TECHNOLOGY,ISP_NAME,IS_ISP
        ,NETWORK_OPERATOR_NAME,MANUFACTURER,MODEL,LOCATION_TYPE,ANDROID_FINGERPRINT,NETWORK_OPERATOR,BRAND,DEVICE,HARDWARE,BUILD_ID
        ,PRODUCT,CDMA_CELL_ID,GSM_CELL_ID,SIM_NETWORK_OPERATOR_NAME,SIM_NETWORK_OPERATOR_CODE,ISO_COUNTRY_CODE,MOBILE_COUNTRY_CODE
        ,MOBILE_NETWORK_CODE,VERSION,HARDWARE_VERSION,FIRMWARE_VERSION,DEVICE_NAME,CONNECTION_TYPE2,CONNECTION_TYPE_NAME2,TECHNOLOGY2
	,CDMADBM,CDMAECIO,EBDODBM,EVDOECIO,EVDOSNR,GSMBITERRORRATE,GSMSIGNALSTRENGTH,OPERATOR)
       SELECT OS,TEST_ID,DEVICE_ID,TEST_DATE,CLIENT_IP_ADDRESS,DOWNLOAD_KBPS,UPLOAD_KBPS,LATENCY,SERVER_NAME,SERVER_COUNTRY,SERVER_COUNTRY_CODE
        ,SERVER_LATITUDE,SERVER_LONGITUDE,SERVER_SPONSOR_NAME,CLIENT_COUNTRY,CLIENT_COUNTRY_CODE,CLIENT_REGION_NAME,CLIENT_REGION_CODE
        ,CLIENT_CITY,CLIENT_LATITUDE,CLIENT_LONGITUDE,MILES_BETWEEN,CONNECTION_TYPE,CONNECTION_TYPE_NAME,TECHNOLOGY,ISP_NAME,IS_ISP
        ,NETWORK_OPERATOR_NAME,MANUFACTURER,MODEL,LOCATION_TYPE,ANDROID_FINGERPRINT,NETWORK_OPERATOR,BRAND,DEVICE,HARDWARE,BUILD_ID
        ,PRODUCT,CDMA_CELL_ID,GSM_CELL_ID,SIM_NETWORK_OPERATOR_NAME,SIM_NETWORK_OPERATOR_CODE,ISO_COUNTRY_CODE,MOBILE_COUNTRY_CODE
        ,MOBILE_NETWORK_CODE,VERSION
        ,HARDWARE_VERSION,FIRMWARE_VERSION,DEVICE_NAME,CONNECTION_TYPE2,CONNECTION_TYPE_NAME2,TECHNOLOGY2
	  ,CDMADBM,CDMAECIO,EBDODBM,EVDOECIO,EVDOSNR,GSMBITERRORRATE,GSMSIGNALSTRENGTH
        ,CASE 
          WHEN TRIM(UPPER (A.NETWORK_OPERATOR_NAME)) IN  ('T-MOBILE NL', 'T-MOBILE  NL') then 'T-Mobile NL' 
          WHEN TRIM(UPPER (A.NETWORK_OPERATOR_NAME)) IN  ('BEN NL', 'T-MOBILE / BEN') then 'Ben NL' 
          WHEN TRIM(UPPER (A.NETWORK_OPERATOR_NAME)) IN  ('VODAFONE NL', 'VF NL') then 'Vodafone NL' 
          WHEN TRIM(UPPER (A.NETWORK_OPERATOR_NAME)) IN  ('NL KPN', 'KPN NL', 'KPN') then 'KPN NL'  
        ELSE A.NETWORK_OPERATOR_NAME 
      END AS OPERATOR
      FROM OOKLA_ALL_DATA A
      WHERE A.TEST_DATE >= V_STARTPERIOD AND A.TEST_DATE < V_ENDPERIOD AND 
      --A.OS IN ('Android','iOS')
      --AND
	  --this is to remove Windows Mobile as Ookla claims the version is unstable; they also do not take it into account in their own analyses
	  -- windows mobile is under 2% of all measures and has a lot of dirty data
      NOT EXISTS 
      (SELECT B.DEVICE_OS_MONTH
        FROM OOKLA_SUSPICIOUS_DEVICES B
        WHERE B.DEVICE_OS_MONTH=A.DEVICE_ID||A.OS||EXTRACT(MONTH FROM A.TEST_DATE));
   RETURN 1;
END;
$$ LANGUAGE PLPGSQL VOLATILE STRICT;

-- tst make clean data
truncate table OOKLA_ALL_DATA_CLEAN;
select make_clean_data('2015-04-1','2015-05-1');
select make_clean_data('2015-05-1','2015-06-1');
select make_clean_data('2015-06-1','2015-07-1');
